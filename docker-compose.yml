version: "3"

services:
  app:
    build: .
    environment:
      - APP_URL=https://${DNS_DOMAIN}/bot-notify
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_HOST=db
      - DATABASE_USER=bot
      - DATABASE_PASSWORD=bot
      - DATABASE_NAME=bot
      - LOG_LEVEL=${LOG_LEVEL}
      - PORT=${PORT}
    networks:
      - proxy
      - bot
    depends_on:
      - db
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.notify-bot.tls.certresolver=lets-encrypt'
      - 'traefik.http.routers.notify-bot.rule=Host(`${DNS_DOMAIN}`) && PathPrefix(`/bot-notify`)'
      - 'traefik.http.routers.notify-bot.entrypoints=websecure'
      - 'traefik.http.routers.notify-bot.service=notify-bot'
      - 'traefik.http.services.notify-bot.loadbalancer.server.port=${PORT}'

  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=bot
      - POSTGRES_PASSWORD=bot
      - POSTGRES_DB=bot
    networks:
      - bot
      - proxy
    volumes:
      - postgres:/var/lib/postgresql/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.tcp.routers.bot-postgres.rule=HostSNI(`*`)'
      - 'traefik.tcp.routers.bot-postgres.entrypoints=postgres'
      - 'traefik.tcp.routers.bot-postgres.service=bot-postgres'
      - 'traefik.tcp.services.bot-postgres.loadbalancer.server.port=5432'

volumes:
  postgres:
  
networks:
  bot:
    external: false
  proxy:
    external: true